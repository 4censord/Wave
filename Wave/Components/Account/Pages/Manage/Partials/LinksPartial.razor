@using Wave.Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation
@inject IStringLocalizer<Wave.Components.Account.Pages.Manage.Index> Localizer

<ul class="flex flex-col gap-2 my-3">
	@foreach (var link in User.Links) {
		<li class="flex justify-between items-center">
			<UserLinkComponent Link="link" class="link flex gap-2" />
			<form action="/api/user/link/@link.Id" method="post">
				<AntiforgeryToken />
				<input type="hidden" name="linkId" value="@link.Id" />
				<input type="hidden" name="ReturnUrl" value="~/@Navigation.ToBaseRelativePath(Navigation.Uri)" />
				<input type="hidden" name="_method" value="delete" />
				<button type="submit" class="btn btn-square btn-error btn-sm" title="@Localizer["Links_Delete_Label"]">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
                        <path fill-rule="evenodd" d="M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z" clip-rule="evenodd" />
                    </svg>
                </button>
			</form>
		</li>
	}
</ul>

<EditForm FormName="user-links" EditContext="@Context" OnValidSubmit="OnValidSubmit"  method="post" class="w-full">
	<DataAnnotationsValidator />
	<InputLabelComponent LabelText="@Localizer["Links_Url_Label"]" For="() => Model.Url">
		<div class="join join-vertical md:join-horizontal">
			<InputText class="input input-bordered md:flex-1 join-item" maxlength="64" autocomplete="off" type="url"
					   @bind-Value="@Model.Url" placeholder="@Localizer["Links_Url_Placeholder"]" />
			<button type="submit" class="btn btn-primary join-item">@Localizer["Links_Submit"]</button>
		</div>
	</InputLabelComponent>
</EditForm>

@code { 
	[Parameter]
	public required ApplicationUser User { get; set; }

	[SupplyParameterFromForm(FormName = "user-links")]
	private InputModel Model { get; set; } = new();
	private EditContext Context { get; set; } = null!;
	private ValidationMessageStore Validation { get; set; } = null!;
	[SupplyParameterFromForm(Name = "LinkId")]
	private int? LinkId { get; set; }

	protected override void OnInitialized() {
		Context = new EditContext(Model);
		Validation = new ValidationMessageStore(Context);
	}

	private async Task OnValidSubmit() {
		var link = new UserLink { UrlString = Model.Url };

		if (!link.Validate()) {
			Validation.Add(() => Model.Url, "Url is invalid.");
			Context.NotifyValidationStateChanged();
			return;
		}

		link.UrlString = link.Url.AbsoluteUri;
		User.Links.Add(link);
		await UserManager.UpdateAsync(User);
		Model = new InputModel();
	}

	private sealed class InputModel {
		[Url, Required(AllowEmptyStrings = false), MaxLength(1024)]
		public string Url { get; set; } = string.Empty;
	}

}
