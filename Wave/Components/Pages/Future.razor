@page "/future"
@using Wave.Data
@using Microsoft.EntityFrameworkCore
@using Wave.Data.Migrations.postgres

@attribute [Authorize(Policy = "ArticleDeletePermissions")]
@inject IDbContextFactory<ApplicationDbContext> ContextFactory
@inject IStringLocalizer<Future> Localizer

<div class="flex gap-x-8 gap-y-4">
    @foreach (var article in Articles) {
        <ArticleTile Article="article" />
    } 
    @if(Articles.Count < 1) {
        <p>@Localizer["NoArticles"]</p>
    }
</div>

@code {
    private List<Article> Articles { get; } = [];

    protected override async Task OnInitializedAsync() {
        await using var context = await ContextFactory.CreateDbContextAsync();

        var now = DateTimeOffset.UtcNow;
        Articles.AddRange(await
            context.Set<Article>()
                .Include(a => a.Author)
                .Where(a => a.Status == ArticleStatus.Published && a.PublishDate > now)
                .OrderByDescending(a => a.PublishDate)
                .ToListAsync());
    }
}
